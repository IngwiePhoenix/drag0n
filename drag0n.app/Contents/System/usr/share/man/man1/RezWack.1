.\" Copyright (c) 2004 Apple Computer, Inc. All Rights Reserved.
.Dd April 12, 2004 
.Dt REZWACK 1 
.Os "Mac OS X"
.Sh NAME 
.Nm /usr/bin/RezWack
.Nd Combines resource and data forks of a file into a "flattened" file.
.Sh SYNOPSIS
.Nm
.Fl d Ar dataFork
.Op Fl do Ar dataForkOffset
.Fl r Ar resFork
.Op Fl ro Ar resForkOffset
.Fl o Ar outFileName
.Op Fl f
.Sh DESCRIPTION
.Nm
takes the data fork of one input file, the resource fork of (possibly the same) file, and combines them into a single "flattened" data-fork file.  This file can then be transferred to file systems, file servers, or other protocols that do not handle Macintosh HFS resource forks.  QuickTime uses this format for "flattened" MooV (.moov or .mov) files.
.Pp                      \" Inserts a space
.Nm
takes the following flags and arguments:
.Bl -tag -width -indent  \" Begins a tagged list 
.It Fl d Ar dataFork
Path to the file to use as the data fork of the resulting file.  This may be any data file.
.It Fl do Ar dataForkOffset
Offset from the beginning of the data file from which to start reading the data.  Default is the beginning of the file.
.It Fl r Ar resFork
Path to the file from which to extract resource information.  This must be a data-fork resource file (see Notes, below).
.It Fl ro Ar resForkOffset
Offset from the beginning of the resource file from which to start reading the resource data.  Default is the beginning of the resource map (byte position 512); note that any other value may result in a corrupted resource file when using
.Xr UnRezWack 1 .
.It Fl o Ar outFileName
Path to the output file to be created.  If the file exists and the 
.Fl f 
flag is not provided, RezWack will fail with error 2.
.It Fl f
Force overwrite of existing output file.
.El
.Pp
.Sh NOTES
The HFS and Extended HFS ("HFS+") file systems support two forks for each file in the file system.  Other file systems may not support multi-fork files, and standard POSIX file system calls do not have options to specify which fork to read on a two-fork file.  To use RezWack properly, you must either have the resource data in a data-fork resource file, or access the named "rsrc" fork on an HFS or HFS+ volume.
.Pp 
Note that on non-HFS volumes, or after using
.Xr SplitForks 1 ,
the resource data of a file is in a hidden file whose name begins with "._".  This is an AppleDouble file that contains the resource data, but it is not a resource file and cannot be used with
.Nm
or other tools that expect a data-fork resource file (such as
.Xr DeRez 1 ).
.Pp
To create the resource data in the data fork, use the 
.Fl useDF 
flag to
.Xr Rez 1 .
When the resource data is in the data fork of a file, you can use the path to the file as the 
.Fl r 
argument regardless of the file system.
.Pp
If the resource data is in the resource fork of a file on a HFS or HFS Extended file system, you can access the resource data using a named fork (for example, the resource fork of 
.Pa ~/foo.txt 
is 
.Pa ~/foo.txt/..namedfork/rsrc).
.Sh EXAMPLES
.Bd -literal -offset indent
/Developer/Tools/RezWack -d ~/foo -r ~/foo/..namedfork/rsrc -o ~/foo.wak
/Developer/Tools/RezWack -d ~/foo.txt -r ~/bar.rsrc -o ~/baz.wak 
.Ed
.Sh SEE ALSO 
.Xr Rez 1 , 
.Xr DeRez 1 ,
.Xr UnRezWack 1
